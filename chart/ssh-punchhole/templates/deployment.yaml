{{- if gt ( int .Values.replicaCount ) 1 }}
{{- fail "Deploying more replicas than 1 is not supported." }}
{{- end }}

{{- $configType := typeOf .Values.configuration }}
{{- $configuration := "" }}
{{- $stripSuffix := false }}
{{- if eq $configType "map[string]interface {}" }}
{{- $configuration = (list (.Values.configuration)) }}
{{- $stripSuffix = true }}
{{- else }}
{{- $configuration = .Values.configuration }}
{{- end }}

{{- range $k, $v := $configuration }}
{{- $deploymentName := printf "%s-%v" (include "charts.fullname" $) $k }}
{{- if $stripSuffix }}
{{- $deploymentName = trimSuffix "-0" $deploymentName }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deploymentName }}
  labels:
  {{- include "charts.labels" $ | nindent 4 }}
spec:
  replicas: {{ $.Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
    {{- include "charts.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum }}
      labels:
      {{- include "charts.selectorLabels" $ | nindent 8 }}
    spec:
      {{- with $.Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ include "charts.fullname" $ }}
        image: {{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        {{- with $.Values.command }}
        command:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $.Values.args }}
        args:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $.Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        env:
        {{- range $k, $v := mergeOverwrite ($v) (dict "IDENTITYFILE" "/ssh/id_rsa" "KNOWN_HOSTS" "/ssh/known_hosts") }}
        - name: "{{ $k }}"
          value: "{{ $v }}"
        {{- end }}
        volumeMounts:
        - name: ssh-data
          mountPath: "/ssh"
          readOnly: true
        {{- if $.Values.resources }}
        resources: {{- toYaml $.Values.resources | nindent 10 }}
        {{- end }}
        {{- if $.Values.postStart.command }}
        lifecycle:
          postStart:
            exec:
              command: {{ toYaml $.Values.postStart.command | nindent 14 }}
        {{- end }}
      volumes:
      - name: ssh-data
        secret:
          defaultMode: 0600
          {{- if not $.Values.data.existingSecret }}
          secretName: {{ include "charts.fullname" $ }}-data
          {{- else }}
          secretName: {{ $.Values.data.existingSecret }}
          {{- end }}
{{- end }}
